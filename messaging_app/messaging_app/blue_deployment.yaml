apiVersion: apps/v1
kind: Deployment
metadata:
  name: messaging-app-deployment
  labels:
    app: messaging-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: messaging-app
  template:
    metadata:
      labels:
        app: messaging-app
    spec:
      containers:
        - name: messaging-app
          image: messaging_app:2.0   # updated version
          imagePullPolicy: Never   # use local image
          ports:
            - containerPort: 8000
          command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
          env:
            - name: DB_NAME
              value: messaging_db
            - name: DB_USER
              value: root
            - name: DB_PASSWORD
              value: password
            - name: DB_HOST
              value: db
            - name: DB_PORT
              value: "3306"
---
apiVersion: v1
kind: Service
metadata:
  name: messaging-app-service
spec:
  selector:
    app: messaging-app
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
  labels:
    app: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:5.7
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: password
            - name: MYSQL_DATABASE
              value: messaging_db
          volumeMounts:
            - name: mysql-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-storage
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: db
spec:
  selector:
    app: mysql
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
  type: ClusterIP
